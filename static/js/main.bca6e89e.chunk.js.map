{"version":3,"sources":["components/listItem.tsx","components/dataValidate.tsx","components/index.tsx","App.tsx","index.tsx"],"names":["robotAvatarOptions","style","color","backgroundColor","icon","RobotOutlined","userAvatarOptions","UserOutlined","RobotWrapperStyle","display","position","robotAvatarWrapperStyle","width","popWrapperStyle","margin","padding","robotArrowStyle","left","top","userArrowStyle","right","RobotItem","props","isUser","text","className","library","defaultInputOption","defaultModalOption","mask","marginRight","zIndex","bodyStyle","height","overflow","wrapClassName","push","reg","useReg","CustomerServiceOutlined","App","useState","modalOpen","setModalOpen","callb","useCallback","v","setTimeout","returnValue","value","RegExp","test","console","error","generateRespones","setList","prev","state","callback","modalOption","inputOption","initWelcome","initState","list","inputValue","setInputValue","finalInputOption","useMemo","submit","finalModalOption","footer","onChange","e","target","onPressEnter","marginLeft","onClick","EnterOutlined","useLayoutEffect","dom","document","querySelector","body","scrolltop","scrollHeight","scrollTop","useEffect","length","last","flag","sign","timer","window","clearTimeout","visible","map","it","index","key","useRegister","onOk","onCancel","title","render","type","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.bca6e89e.chunk.js","sourcesContent":["import Avatar, { AvatarProps } from \"antd/lib/avatar/avatar\";\r\nimport React, { CSSProperties, ReactNode } from \"react\";\r\nimport { RobotOutlined, UserOutlined } from \"@ant-design/icons\";\r\n\r\nexport const robotAvatarOptions: AvatarProps = {\r\n\tstyle: { color: \"#f56a00\", backgroundColor: \"#fde3cf\" },\r\n\ticon: <RobotOutlined />,\r\n};\r\nexport const userAvatarOptions: AvatarProps = {\r\n\tstyle: { color: \"white\", backgroundColor: \"#87d068\" },\r\n\ticon: <UserOutlined />,\r\n};\r\n\r\nexport const RobotWrapperStyle: CSSProperties = {\r\n\tdisplay: \"flex\",\r\n\tposition: \"relative\",\r\n};\r\nexport const robotAvatarWrapperStyle: CSSProperties = {\r\n\twidth: \"32px\",\r\n};\r\nexport const popWrapperStyle: CSSProperties = {\r\n\twidth: \"calc(100% - 20px - 64px)\", //头像宽32*2 边距20\r\n\tmargin: \"10px\",\r\n\tpadding: \"10px\",\r\n};\r\n\r\nexport const robotArrowStyle: CSSProperties = {\r\n\tleft: \"40px\", //这个和下面那个user对应，改了必须都改\r\n\ttop: \"15px\",\r\n\tcolor: \"white\",\r\n};\r\nexport const userArrowStyle: CSSProperties = {\r\n\tright: \"40px\",\r\n\ttop: \"15px\",\r\n\tcolor: \"white\",\r\n};\r\nexport type ItemProps = {\r\n\tisUser?: boolean;\r\n\ttext: ReactNode;\r\n};\r\n\r\nexport function RobotItem(props: ItemProps) {\r\n\tconst { isUser, text } = props;\r\n\treturn (\r\n\t\t<div style={RobotWrapperStyle}>\r\n\t\t\t<div style={robotAvatarWrapperStyle}>\r\n\t\t\t\t{!isUser && <Avatar {...robotAvatarOptions}></Avatar>}\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"ant-popover-arrow\"\r\n\t\t\t\tstyle={isUser ? userArrowStyle : robotArrowStyle}\r\n\t\t\t></div>\r\n\t\t\t<div className=\"ant-popover-inner\" style={popWrapperStyle}>\r\n\t\t\t\t<span>{text}</span>\r\n\t\t\t</div>\r\n\t\t\t<div style={robotAvatarWrapperStyle}>\r\n\t\t\t\t{isUser && <Avatar {...userAvatarOptions}></Avatar>}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { ReactNode } from \"react\";\r\nimport { RenderList } from \".\";\r\n\r\n//这个文件与index实际分离关系。\r\n\r\nexport type libraryType = Array<{\r\n\treg?: string;\r\n\ttext: ReactNode;\r\n\tuseReg?: RegExp;\r\n}>;\r\n\r\nexport let library: libraryType = [];\r\n\r\nexport function generateRespones(v: RenderList): ReactNode {\r\n\tif (typeof v.text === \"string\") {\r\n\t\tfor (let value of library) {\r\n\t\t\tif (value.reg) {\r\n\t\t\t\t//字符串全字匹配\r\n\t\t\t\tlet r = new RegExp(value.reg);\r\n\t\t\t\tif (r.test(v.text)) {\r\n\t\t\t\t\treturn value.text;\r\n\t\t\t\t}\r\n\t\t\t} else if (value.useReg && value.useReg.test(v.text)) {\r\n\t\t\t\t//使用自定义匹配\r\n\t\t\t\treturn value.text;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\tconsole.error(\"user input invalid type\");\r\n\treturn null;\r\n}\r\n","import { Button, Input } from \"antd\";\r\nimport { InputProps } from \"antd/lib/input\";\r\nimport Modal, { ModalProps } from \"antd/lib/modal/Modal\";\r\nimport React, {\r\n\tReactNode,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseLayoutEffect,\r\n\tuseMemo,\r\n\tuseState,\r\n} from \"react\";\r\nimport { EnterOutlined } from \"@ant-design/icons\";\r\nimport { RobotItem } from \"./listItem\";\r\nimport \"./index.css\";\r\nexport * from \"./dataValidate\";\r\nexport * from \"./listItem\";\r\n\r\nexport let modalHeight = 400;\r\nexport const defaultInputOption: InputProps = {};\r\nexport const defaultModalOption: ModalProps = {\r\n\tmask: false,\r\n\tstyle: { marginRight: 0, zIndex: 10000 },\r\n\twidth: 300,\r\n\tbodyStyle: {\r\n\t\theight: `${modalHeight}px`,\r\n\t\toverflow: \"auto\",\r\n\t},\r\n\twrapClassName: \"yehuozhili\",\r\n};\r\n\r\nexport interface RenderList {\r\n\tisUser: boolean;\r\n\ttext: ReactNode;\r\n}\r\n\r\nexport let initWelcomeDelay = 500;\r\n\r\nexport function useRegister(\r\n\t//modal状态\r\n\tstate: boolean,\r\n\t//获取用户回话的回调\r\n\tcallback?: (v: RenderList) => void,\r\n\tmodalOption?: ModalProps,\r\n\tinputOption?: InputProps,\r\n\tinitWelcome?: ReactNode,\r\n\tinitState?: RenderList[]\r\n): [ReactNode, React.Dispatch<React.SetStateAction<RenderList[]>>] {\r\n\t//存放渲染语句\r\n\tconst [list, setList] = useState<RenderList[]>(initState ? initState : []);\r\n\t//存放输入框内容\r\n\tconst [inputValue, setInputValue] = useState<string>(\"\");\r\n\r\n\tconst finalInputOption = useMemo(() => {\r\n\t\treturn { ...defaultInputOption, ...inputOption };\r\n\t}, [inputOption]);\r\n\r\n\tconst submit = useCallback(() => {\r\n\t\tif (inputValue !== \"\") {\r\n\t\t\tsetList((prev) => {\r\n\t\t\t\treturn [...prev, { isUser: true, text: inputValue }];\r\n\t\t\t});\r\n\t\t\tsetInputValue(\"\");\r\n\t\t}\r\n\t}, [inputValue]);\r\n\r\n\tconst finalModalOption = useMemo(() => {\r\n\t\tconst footer = (\r\n\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t<Input\r\n\t\t\t\t\tvalue={inputValue}\r\n\t\t\t\t\tonChange={(e) => setInputValue(e.target.value)}\r\n\t\t\t\t\tonPressEnter={submit}\r\n\t\t\t\t\t{...finalInputOption}\r\n\t\t\t\t></Input>\r\n\t\t\t\t<Button style={{ marginLeft: \"5px\" }} onClick={submit}>\r\n\t\t\t\t\t<EnterOutlined />\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t\treturn { ...defaultModalOption, footer, ...modalOption };\r\n\t}, [finalInputOption, inputValue, modalOption, submit]);\r\n\t//这个为了使得滚动条始终保持最底\r\n\tuseLayoutEffect(() => {\r\n\t\tconst dom = document.querySelector(\".yehuozhili\");\r\n\t\tif (dom) {\r\n\t\t\tlet body = dom.querySelector(\".ant-modal-body\") as HTMLElement;\r\n\t\t\tif (body) {\r\n\t\t\t\tlet height = body.scrollHeight;\r\n\t\t\t\tlet bodyheight = modalHeight;\r\n\t\t\t\tlet scrolltop = height - bodyheight;\r\n\t\t\t\tbody.scrollTop = scrolltop;\r\n\t\t\t}\r\n\t\t}\r\n\t}, [list]);\r\n\t//用来制作回调,过滤机器人发送\r\n\tuseEffect(() => {\r\n\t\tif (list.length > 0 && callback) {\r\n\t\t\tlet last = list[list.length - 1];\r\n\t\t\tif (last.isUser) {\r\n\t\t\t\tcallback(last);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [callback, list]);\r\n\r\n\t//不能直接设到state初始值上，否则看起来怪异。\r\n\t//需要第一次用户打开时把语句设上\r\n\tconst flag: { sign: boolean } = useMemo(() => {\r\n\t\treturn { sign: true };\r\n\t}, []);\r\n\tuseEffect(() => {\r\n\t\tlet timer: number;\r\n\t\tif (flag.sign && state && initWelcome) {\r\n\t\t\ttimer = window.setTimeout(() => {\r\n\t\t\t\tflag.sign = false;\r\n\t\t\t\tsetList((prev) => [\r\n\t\t\t\t\t...prev,\r\n\t\t\t\t\t{ isUser: false, text: initWelcome },\r\n\t\t\t\t]);\r\n\t\t\t}, initWelcomeDelay);\r\n\t\t}\r\n\t\treturn () => window.clearTimeout(timer);\r\n\t}, [flag, initWelcome, state]);\r\n\r\n\tlet modalRender = (\r\n\t\t<Modal visible={state} {...finalModalOption}>\r\n\t\t\t{list.map((it, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<RobotItem\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tisUser={it.isUser}\r\n\t\t\t\t\t\ttext={it.text}\r\n\t\t\t\t\t></RobotItem>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</Modal>\r\n\t);\r\n\treturn [modalRender, setList];\r\n}\r\n","import React, { useCallback, useState } from \"react\";\nimport { useRegister } from \"./components\";\nimport { CustomerServiceOutlined } from \"@ant-design/icons\";\nimport { Button } from \"antd\";\nimport { library, generateRespones, RenderList } from \"./components/index\";\n\n//text是语句，reg会生成正则匹配，useReg会使用自定义匹配\nlibrary.push(\n\t//语料库，push进去，也可以不用\n\t{\n\t\ttext: \"我是机器人\",\n\t\treg: \"你是谁\",\n\t},\n\t{\n\t\ttext: \"author is yehuozhili\",\n\t\tuseReg: /(.*?)作者是谁(.*?)/,\n\t},\n\t{\n\t\ttext: <CustomerServiceOutlined></CustomerServiceOutlined>,\n\t\tuseReg: /(.*?)表情(.*?)/,\n\t}\n);\n\nfunction App() {\n\tconst [modalOpen, setModalOpen] = useState(false);\n\t//使用useCllback避免用户输入时调用匹配！！！！！！！\n\tconst callb = useCallback((v: RenderList) => {\n\t\tsetTimeout(() => {\n\t\t\t//使用settimeout 更像机器人回话\n\t\t\tlet returnValue = generateRespones(v);\n\t\t\tif (returnValue) {\n\t\t\t\t//排除null\n\t\t\t\tsetList((prev) => [\n\t\t\t\t\t...prev,\n\t\t\t\t\t{ isUser: false, text: returnValue },\n\t\t\t\t]);\n\t\t\t}\n\t\t}, 500);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\t// 注册\n\tconst [render, setList] = useRegister(\n\t\tmodalOpen,\n\t\tcallb,\n\t\t{\n\t\t\tonOk: () => setModalOpen(false),\n\t\t\tonCancel: () => setModalOpen(false),\n\t\t\ttitle: \"h5-Dooring机器人客服\",\n\t\t},\n\t\t{},\n\t\t<div>welcome!我是机器人初始欢迎语句！！</div>\n\t);\n\n\treturn (\n\t\t<div>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: \"fixed\",\n\t\t\t\t\tright: \"10px\",\n\t\t\t\t\ttop: \"40%\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Button type=\"primary\" onClick={() => setModalOpen(!modalOpen)}>\n\t\t\t\t\t<CustomerServiceOutlined></CustomerServiceOutlined>\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t{render}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}